/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Swosh, SwoshInterface } from "../../contracts/Swosh";

const _abi = [
  {
    inputs: [],
    name: "INVALID_PARAM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.ERC20Param",
        name: "_erc20Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.ERC721Param",
        name: "_erc721Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.ERC1155Param",
        name: "_erc1155Params",
        type: "tuple",
      },
    ],
    name: "megaTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506115ed806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806370b27b6d1161005b57806370b27b6d146100d657806395da0adc146100f2578063ec47b1791461010e578063fded7bfb1461012a5761007d565b80633c741b7414610082578063486ee94c1461009e5780636bcad04a146100ba575b600080fd5b61009c60048036038101906100979190610c08565b610146565b005b6100b860048036038101906100b39190610dc8565b61038b565b005b6100d460048036038101906100cf9190610e91565b6104bd565b005b6100f060048036038101906100eb9190610e91565b610639565b005b61010c60048036038101906101079190610f45565b6107c7565b005b61012860048036038101906101239190610f45565b6108dc565b005b610144600480360381019061013f9190610fda565b610a03565b005b600083806000019061015891906110d2565b90501115610200573073ffffffffffffffffffffffffffffffffffffffff166370b27b6d84806000019061018c91906110d2565b86806020019061019c91906110d2565b8880604001906101ac9190611135565b6040518763ffffffff1660e01b81526004016101cd969594939291906112d6565b600060405180830381600087803b1580156101e757600080fd5b505af11580156101fb573d6000803e3d6000fd5b505050505b600082806000019061021291906110d2565b905011156102ba573073ffffffffffffffffffffffffffffffffffffffff16636bcad04a83806000019061024691906110d2565b85806020019061025691906110d2565b8780604001906102669190611135565b6040518763ffffffff1660e01b8152600401610287969594939291906112d6565b600060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505050505b60008180600001906102cc91906110d2565b90501115610386573073ffffffffffffffffffffffffffffffffffffffff1663fded7bfb82806000019061030091906110d2565b84806020019061031091906110d2565b8680604001906103209190611135565b8880606001906103309190611135565b6040518963ffffffff1660e01b8152600401610353989796959493929190611328565b600060405180830381600087803b15801561036d57600080fd5b505af1158015610381573d6000803e3d6000fd5b505050505b505050565b8383905087879050146103ca576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b878790508110156104b3578787828181106103eb576103ea611391565b5b905060200201602081019061040091906113c0565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a33888888868181106104305761042f611391565b5b9050602002013587878781811061044a57610449611391565b5b905060200201356040518563ffffffff1660e01b8152600401610470949392919061144c565b600060405180830381600087803b15801561048a57600080fd5b505af115801561049e573d6000803e3d6000fd5b50505050806104ac906114d3565b90506103cd565b5050505050505050565b8181905086869050146104fc576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83839050868690501461053b576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156106305786868281811061055c5761055b611391565b5b905060200201602081019061057191906113c0565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd338787858181106105a05761059f611391565b5b90506020020160208101906105b591906113c0565b8686868181106105c8576105c7611391565b5b905060200201356040518463ffffffff1660e01b81526004016105ed9392919061151b565b600060405180830381600087803b15801561060757600080fd5b505af115801561061b573d6000803e3d6000fd5b5050505080610629906114d3565b905061053e565b50505050505050565b838390508686905014610678576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181905086869050146106b7576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156107be578686828181106106d8576106d7611391565b5b90506020020160208101906106ed91906113c0565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3387878581811061071c5761071b611391565b5b905060200201602081019061073191906113c0565b86868681811061074457610743611391565b5b905060200201356040518463ffffffff1660e01b81526004016107699392919061151b565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac919061158a565b50806107b7906114d3565b90506106ba565b50505050505050565b818190508585905014610806576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b858590508110156108d45785858281811061082757610826611391565b5b905060200201602081019061083c91906113c0565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd338686868681811061086c5761086b611391565b5b905060200201356040518463ffffffff1660e01b81526004016108919392919061151b565b600060405180830381600087803b1580156108ab57600080fd5b505af11580156108bf573d6000803e3d6000fd5b50505050806108cd906114d3565b9050610809565b505050505050565b81819050858590501461091b576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b858590508110156109fb5785858281811061093c5761093b611391565b5b905060200201602081019061095191906113c0565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd338686868681811061098157610980611391565b5b905060200201356040518463ffffffff1660e01b81526004016109a69392919061151b565b6020604051808303816000875af11580156109c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e9919061158a565b50806109f4906114d3565b905061091e565b505050505050565b838390508888905014610a42576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b858590508888905014610a81576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b88889050811015610b9157888882818110610aa257610aa1611391565b5b9050602002016020810190610ab791906113c0565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a33898985818110610ae657610ae5611391565b5b9050602002016020810190610afb91906113c0565b888886818110610b0e57610b0d611391565b5b90506020020135878787818110610b2857610b27611391565b5b905060200201356040518563ffffffff1660e01b8152600401610b4e949392919061144c565b600060405180830381600087803b158015610b6857600080fd5b505af1158015610b7c573d6000803e3d6000fd5b5050505080610b8a906114d3565b9050610a84565b505050505050505050565b600080fd5b600080fd5b600080fd5b600060608284031215610bc157610bc0610ba6565b5b81905092915050565b600060608284031215610be057610bdf610ba6565b5b81905092915050565b600060808284031215610bff57610bfe610ba6565b5b81905092915050565b600080600060608486031215610c2157610c20610b9c565b5b600084013567ffffffffffffffff811115610c3f57610c3e610ba1565b5b610c4b86828701610bab565b935050602084013567ffffffffffffffff811115610c6c57610c6b610ba1565b5b610c7886828701610bca565b925050604084013567ffffffffffffffff811115610c9957610c98610ba1565b5b610ca586828701610be9565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f840112610cd457610cd3610caf565b5b8235905067ffffffffffffffff811115610cf157610cf0610cb4565b5b602083019150836020820283011115610d0d57610d0c610cb9565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d3f82610d14565b9050919050565b610d4f81610d34565b8114610d5a57600080fd5b50565b600081359050610d6c81610d46565b92915050565b60008083601f840112610d8857610d87610caf565b5b8235905067ffffffffffffffff811115610da557610da4610cb4565b5b602083019150836020820283011115610dc157610dc0610cb9565b5b9250929050565b60008060008060008060006080888a031215610de757610de6610b9c565b5b600088013567ffffffffffffffff811115610e0557610e04610ba1565b5b610e118a828b01610cbe565b97509750506020610e248a828b01610d5d565b955050604088013567ffffffffffffffff811115610e4557610e44610ba1565b5b610e518a828b01610d72565b9450945050606088013567ffffffffffffffff811115610e7457610e73610ba1565b5b610e808a828b01610d72565b925092505092959891949750929550565b60008060008060008060608789031215610eae57610ead610b9c565b5b600087013567ffffffffffffffff811115610ecc57610ecb610ba1565b5b610ed889828a01610cbe565b9650965050602087013567ffffffffffffffff811115610efb57610efa610ba1565b5b610f0789828a01610cbe565b9450945050604087013567ffffffffffffffff811115610f2a57610f29610ba1565b5b610f3689828a01610d72565b92509250509295509295509295565b600080600080600060608688031215610f6157610f60610b9c565b5b600086013567ffffffffffffffff811115610f7f57610f7e610ba1565b5b610f8b88828901610cbe565b95509550506020610f9e88828901610d5d565b935050604086013567ffffffffffffffff811115610fbf57610fbe610ba1565b5b610fcb88828901610d72565b92509250509295509295909350565b6000806000806000806000806080898b031215610ffa57610ff9610b9c565b5b600089013567ffffffffffffffff81111561101857611017610ba1565b5b6110248b828c01610cbe565b9850985050602089013567ffffffffffffffff81111561104757611046610ba1565b5b6110538b828c01610cbe565b9650965050604089013567ffffffffffffffff81111561107657611075610ba1565b5b6110828b828c01610d72565b9450945050606089013567ffffffffffffffff8111156110a5576110a4610ba1565b5b6110b18b828c01610d72565b92509250509295985092959890939650565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126110ef576110ee6110c3565b5b80840192508235915067ffffffffffffffff821115611111576111106110c8565b5b60208301925060208202360383131561112d5761112c6110cd565b5b509250929050565b60008083356001602003843603038112611152576111516110c3565b5b80840192508235915067ffffffffffffffff821115611174576111736110c8565b5b6020830192506020820236038313156111905761118f6110cd565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b6111bc81610d34565b82525050565b60006111ce83836111b3565b60208301905092915050565b60006111e96020840184610d5d565b905092915050565b6000602082019050919050565b600061120a8385611198565b9350611215826111a9565b8060005b8581101561124e5761122b82846111da565b61123588826111c2565b9750611240836111f1565b925050600181019050611219565b5085925050509392505050565b600082825260208201905092915050565b600080fd5b82818337505050565b6000611286838561125b565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156112b9576112b861126c565b5b6020830292506112ca838584611271565b82840190509392505050565b600060608201905081810360008301526112f181888a6111fe565b905081810360208301526113068186886111fe565b9050818103604083015261131b81848661127a565b9050979650505050505050565b60006080820190508181036000830152611343818a8c6111fe565b9050818103602083015261135881888a6111fe565b9050818103604083015261136d81868861127a565b9050818103606083015261138281848661127a565b90509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156113d6576113d5610b9c565b5b60006113e484828501610d5d565b91505092915050565b6113f681610d34565b82525050565b6000819050919050565b61140f816113fc565b82525050565b600082825260208201905092915050565b50565b6000611436600083611415565b915061144182611426565b600082019050919050565b600060a08201905061146160008301876113ed565b61146e60208301866113ed565b61147b6040830185611406565b6114886060830184611406565b818103608083015261149981611429565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114de826113fc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115105761150f6114a4565b5b600182019050919050565b600060608201905061153060008301866113ed565b61153d60208301856113ed565b61154a6040830184611406565b949350505050565b60008115159050919050565b61156781611552565b811461157257600080fd5b50565b6000815190506115848161155e565b92915050565b6000602082840312156115a05761159f610b9c565b5b60006115ae84828501611575565b9150509291505056fea26469706673582212206115b1cda552aed835eb93ab02f5eb32e283fd543e7aa118fb786fa873fad8a064736f6c63430008120033";

type SwoshConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwoshConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swosh__factory extends ContractFactory {
  constructor(...args: SwoshConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Swosh> {
    return super.deploy(overrides || {}) as Promise<Swosh>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Swosh {
    return super.attach(address) as Swosh;
  }
  override connect(signer: Signer): Swosh__factory {
    return super.connect(signer) as Swosh__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwoshInterface {
    return new utils.Interface(_abi) as SwoshInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Swosh {
    return new Contract(address, _abi, signerOrProvider) as Swosh;
  }
}
