/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Swosh, SwoshInterface } from "../../contracts/Swosh";

const _abi = [
  {
    inputs: [],
    name: "FORBIDDEN",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PARAM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct ERC20Param",
        name: "_erc20Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct ERC721Param",
        name: "_erc721Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct ERC1155Param",
        name: "_erc1155Params",
        type: "tuple",
      },
    ],
    name: "megaTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MultiERC20Param",
        name: "_erc20Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct MultiERC721Param",
        name: "_erc721Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MultiERC1155Param",
        name: "_erc1155Params",
        type: "tuple",
      },
    ],
    name: "multiMegaTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506117e3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370b27b6d1161005b57806370b27b6d146100fd57806395da0adc14610119578063ec47b17914610135578063fded7bfb1461015157610088565b8063089a86d11461008d578063486ee94c146100a95780635d151c1f146100c55780636bcad04a146100e1575b600080fd5b6100a760048036038101906100a29190610ef3565b61016d565b005b6100c360048036038101906100be91906110b3565b61027b565b005b6100df60048036038101906100da91906111d9565b610293565b005b6100fb60048036038101906100f69190611280565b6103aa565b005b61011760048036038101906101129190611280565b6103c0565b005b610133600480360381019061012e9190611334565b6103d6565b005b61014f600480360381019061014a9190611334565b6103ea565b005b61016b600480360381019061016691906113c9565b6103fe565b005b600083806000019061017f91906114c1565b905011156101c0576101bf83806000019061019a91906114c1565b8580602001906101aa91906114c1565b8780604001906101ba9190611524565b610418565b5b60008280600001906101d291906114c1565b90501115610213576102128280600001906101ed91906114c1565b8480602001906101fd91906114c1565b86806040019061020d9190611524565b61060b565b5b600081806000019061022591906114c1565b905011156102765761027581806000019061024091906114c1565b83806020019061025091906114c1565b8580604001906102609190611524565b8780606001906102709190611524565b6107ec565b5b505050565b61028a878787878787876109ea565b50505050505050565b60008380600001906102a591906114c1565b905011156102e9576102e88380600001906102c091906114c1565b8560200160208101906102d39190611587565b8680604001906102e39190611524565b610b81565b5b60008280600001906102fb91906114c1565b9050111561033f5761033e82806000019061031691906114c1565b8460200160208101906103299190611587565b8580604001906103399190611524565b610d0d565b5b600081806000019061035191906114c1565b905011156103a5576103a481806000019061036c91906114c1565b83602001602081019061037f9190611587565b84806040019061038f9190611524565b86806060019061039f9190611524565b6109ea565b5b505050565b6103b886868686868661060b565b505050505050565b6103ce868686868686610418565b505050505050565b6103e38585858585610d0d565b5050505050565b6103f78585858585610b81565b5050505050565b61040e88888888888888886107ec565b5050505050505050565b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047d576040517fdaf9dbc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8383905086869050146104bc576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181905086869050146104fb576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156106025786868281811061051c5761051b6115b4565b5b90506020020160208101906105319190611587565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd338787858181106105605761055f6115b4565b5b90506020020160208101906105759190611587565b868686818110610588576105876115b4565b5b905060200201356040518463ffffffff1660e01b81526004016105ad9392919061160b565b6020604051808303816000875af11580156105cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f0919061167a565b50806105fb906116d6565b90506104fe565b50505050505050565b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610670576040517fdaf9dbc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181905086869050146106af576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8383905086869050146106ee576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156107e35786868281811061070f5761070e6115b4565b5b90506020020160208101906107249190611587565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd33878785818110610753576107526115b4565b5b90506020020160208101906107689190611587565b86868681811061077b5761077a6115b4565b5b905060200201356040518463ffffffff1660e01b81526004016107a09392919061160b565b600060405180830381600087803b1580156107ba57600080fd5b505af11580156107ce573d6000803e3d6000fd5b50505050806107dc906116d6565b90506106f1565b50505050505050565b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610851576040517fdaf9dbc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838390508888905014610890576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8585905088889050146108cf576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b888890508110156109df578888828181106108f0576108ef6115b4565b5b90506020020160208101906109059190611587565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a33898985818110610934576109336115b4565b5b90506020020160208101906109499190611587565b88888681811061095c5761095b6115b4565b5b90506020020135878787818110610976576109756115b4565b5b905060200201356040518563ffffffff1660e01b815260040161099c9493929190611755565b600060405180830381600087803b1580156109b657600080fd5b505af11580156109ca573d6000803e3d6000fd5b50505050806109d8906116d6565b90506108d2565b505050505050505050565b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a4f576040517fdaf9dbc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838390508787905014610a8e576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b87879050811015610b7757878782818110610aaf57610aae6115b4565b5b9050602002016020810190610ac49190611587565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a3388888886818110610af457610af36115b4565b5b90506020020135878787818110610b0e57610b0d6115b4565b5b905060200201356040518563ffffffff1660e01b8152600401610b349493929190611755565b600060405180830381600087803b158015610b4e57600080fd5b505af1158015610b62573d6000803e3d6000fd5b5050505080610b70906116d6565b9050610a91565b5050505050505050565b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610be6576040517fdaf9dbc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818190508585905014610c25576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85859050811015610d0557858582818110610c4657610c456115b4565b5b9050602002016020810190610c5b9190611587565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3386868686818110610c8b57610c8a6115b4565b5b905060200201356040518463ffffffff1660e01b8152600401610cb09392919061160b565b6020604051808303816000875af1158015610ccf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf3919061167a565b5080610cfe906116d6565b9050610c28565b505050505050565b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d72576040517fdaf9dbc000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818190508585905014610db1576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85859050811015610e7f57858582818110610dd257610dd16115b4565b5b9050602002016020810190610de79190611587565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3386868686818110610e1757610e166115b4565b5b905060200201356040518463ffffffff1660e01b8152600401610e3c9392919061160b565b600060405180830381600087803b158015610e5657600080fd5b505af1158015610e6a573d6000803e3d6000fd5b5050505080610e78906116d6565b9050610db4565b505050505050565b600080fd5b600080fd5b600080fd5b600060608284031215610eac57610eab610e91565b5b81905092915050565b600060608284031215610ecb57610eca610e91565b5b81905092915050565b600060808284031215610eea57610ee9610e91565b5b81905092915050565b600080600060608486031215610f0c57610f0b610e87565b5b600084013567ffffffffffffffff811115610f2a57610f29610e8c565b5b610f3686828701610e96565b935050602084013567ffffffffffffffff811115610f5757610f56610e8c565b5b610f6386828701610eb5565b925050604084013567ffffffffffffffff811115610f8457610f83610e8c565b5b610f9086828701610ed4565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f840112610fbf57610fbe610f9a565b5b8235905067ffffffffffffffff811115610fdc57610fdb610f9f565b5b602083019150836020820283011115610ff857610ff7610fa4565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102a82610fff565b9050919050565b61103a8161101f565b811461104557600080fd5b50565b60008135905061105781611031565b92915050565b60008083601f84011261107357611072610f9a565b5b8235905067ffffffffffffffff8111156110905761108f610f9f565b5b6020830191508360208202830111156110ac576110ab610fa4565b5b9250929050565b60008060008060008060006080888a0312156110d2576110d1610e87565b5b600088013567ffffffffffffffff8111156110f0576110ef610e8c565b5b6110fc8a828b01610fa9565b9750975050602061110f8a828b01611048565b955050604088013567ffffffffffffffff8111156111305761112f610e8c565b5b61113c8a828b0161105d565b9450945050606088013567ffffffffffffffff81111561115f5761115e610e8c565b5b61116b8a828b0161105d565b925092505092959891949750929550565b60006060828403121561119257611191610e91565b5b81905092915050565b6000606082840312156111b1576111b0610e91565b5b81905092915050565b6000608082840312156111d0576111cf610e91565b5b81905092915050565b6000806000606084860312156111f2576111f1610e87565b5b600084013567ffffffffffffffff8111156112105761120f610e8c565b5b61121c8682870161117c565b935050602084013567ffffffffffffffff81111561123d5761123c610e8c565b5b6112498682870161119b565b925050604084013567ffffffffffffffff81111561126a57611269610e8c565b5b611276868287016111ba565b9150509250925092565b6000806000806000806060878903121561129d5761129c610e87565b5b600087013567ffffffffffffffff8111156112bb576112ba610e8c565b5b6112c789828a01610fa9565b9650965050602087013567ffffffffffffffff8111156112ea576112e9610e8c565b5b6112f689828a01610fa9565b9450945050604087013567ffffffffffffffff81111561131957611318610e8c565b5b61132589828a0161105d565b92509250509295509295509295565b6000806000806000606086880312156113505761134f610e87565b5b600086013567ffffffffffffffff81111561136e5761136d610e8c565b5b61137a88828901610fa9565b9550955050602061138d88828901611048565b935050604086013567ffffffffffffffff8111156113ae576113ad610e8c565b5b6113ba8882890161105d565b92509250509295509295909350565b6000806000806000806000806080898b0312156113e9576113e8610e87565b5b600089013567ffffffffffffffff81111561140757611406610e8c565b5b6114138b828c01610fa9565b9850985050602089013567ffffffffffffffff81111561143657611435610e8c565b5b6114428b828c01610fa9565b9650965050604089013567ffffffffffffffff81111561146557611464610e8c565b5b6114718b828c0161105d565b9450945050606089013567ffffffffffffffff81111561149457611493610e8c565b5b6114a08b828c0161105d565b92509250509295985092959890939650565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126114de576114dd6114b2565b5b80840192508235915067ffffffffffffffff821115611500576114ff6114b7565b5b60208301925060208202360383131561151c5761151b6114bc565b5b509250929050565b60008083356001602003843603038112611541576115406114b2565b5b80840192508235915067ffffffffffffffff821115611563576115626114b7565b5b60208301925060208202360383131561157f5761157e6114bc565b5b509250929050565b60006020828403121561159d5761159c610e87565b5b60006115ab84828501611048565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6115ec8161101f565b82525050565b6000819050919050565b611605816115f2565b82525050565b600060608201905061162060008301866115e3565b61162d60208301856115e3565b61163a60408301846115fc565b949350505050565b60008115159050919050565b61165781611642565b811461166257600080fd5b50565b6000815190506116748161164e565b92915050565b6000602082840312156116905761168f610e87565b5b600061169e84828501611665565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116e1826115f2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611713576117126116a7565b5b600182019050919050565b600082825260208201905092915050565b50565b600061173f60008361171e565b915061174a8261172f565b600082019050919050565b600060a08201905061176a60008301876115e3565b61177760208301866115e3565b61178460408301856115fc565b61179160608301846115fc565b81810360808301526117a281611732565b90509594505050505056fea2646970667358221220367173257235384a57ad14333005b5b5aba2b68d019cc97ee797c96bf7668f0164736f6c63430008120033";

type SwoshConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwoshConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swosh__factory extends ContractFactory {
  constructor(...args: SwoshConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Swosh> {
    return super.deploy(overrides || {}) as Promise<Swosh>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Swosh {
    return super.attach(address) as Swosh;
  }
  override connect(signer: Signer): Swosh__factory {
    return super.connect(signer) as Swosh__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwoshInterface {
    return new utils.Interface(_abi) as SwoshInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Swosh {
    return new Contract(address, _abi, signerOrProvider) as Swosh;
  }
}
