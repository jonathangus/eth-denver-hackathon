/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Swosh, SwoshInterface } from "../../contracts/Swosh";

const _abi = [
  {
    inputs: [],
    name: "FORBIDDEN",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PARAM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchTransferERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.ERC20Param",
        name: "_erc20Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.ERC721Param",
        name: "_erc721Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.ERC1155Param",
        name: "_erc1155Params",
        type: "tuple",
      },
    ],
    name: "megaTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "multiBatchTransferERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.MultiERC20Param",
        name: "_erc20Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.MultiERC721Param",
        name: "_erc721Params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "recipients",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct Swosh.MultiERC1155Param",
        name: "_erc1155Params",
        type: "tuple",
      },
    ],
    name: "multiMegaTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611585806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370b27b6d1161005b57806370b27b6d146100fd57806395da0adc14610119578063ec47b17914610135578063fded7bfb1461015157610088565b8063089a86d11461008d578063486ee94c146100a95780635d151c1f146100c55780636bcad04a146100e1575b600080fd5b6100a760048036038101906100a29190610c95565b61016d565b005b6100c360048036038101906100be9190610e55565b61027b565b005b6100df60048036038101906100da9190610f7b565b610293565b005b6100fb60048036038101906100f69190611022565b6103aa565b005b61011760048036038101906101129190611022565b6103c0565b005b610133600480360381019061012e91906110d6565b6103d6565b005b61014f600480360381019061014a91906110d6565b6103ea565b005b61016b6004803603810190610166919061116b565b6103fe565b005b600083806000019061017f9190611263565b905011156101c0576101bf83806000019061019a9190611263565b8580602001906101aa9190611263565b8780604001906101ba91906112c6565b610418565b5b60008280600001906101d29190611263565b90501115610213576102128280600001906101ed9190611263565b8480602001906101fd9190611263565b86806040019061020d91906112c6565b6105a6565b5b60008180600001906102259190611263565b90501115610276576102758180600001906102409190611263565b8380602001906102509190611263565b85806040019061026091906112c6565b87806060019061027091906112c6565b610722565b5b505050565b61028a878787878787876108bb565b50505050505050565b60008380600001906102a59190611263565b905011156102e9576102e88380600001906102c09190611263565b8560200160208101906102d39190611329565b8680604001906102e391906112c6565b6109ed565b5b60008280600001906102fb9190611263565b9050111561033f5761033e8280600001906103169190611263565b8460200160208101906103299190611329565b85806040019061033991906112c6565b610b14565b5b60008180600001906103519190611263565b905011156103a5576103a481806000019061036c9190611263565b83602001602081019061037f9190611329565b84806040019061038f91906112c6565b86806060019061039f91906112c6565b6108bb565b5b505050565b6103b88686868686866105a6565b505050505050565b6103ce868686868686610418565b505050505050565b6103e38585858585610b14565b5050505050565b6103f785858585856109ed565b5050505050565b61040e8888888888888888610722565b5050505050505050565b838390508686905014610457576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818190508686905014610496576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8686905081101561059d578686828181106104b7576104b6611356565b5b90506020020160208101906104cc9190611329565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd338787858181106104fb576104fa611356565b5b90506020020160208101906105109190611329565b86868681811061052357610522611356565b5b905060200201356040518463ffffffff1660e01b8152600401610548939291906113ad565b6020604051808303816000875af1158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b919061141c565b508061059690611478565b9050610499565b50505050505050565b8181905086869050146105e5576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838390508686905014610624576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b868690508110156107195786868281811061064557610644611356565b5b905060200201602081019061065a9190611329565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3387878581811061068957610688611356565b5b905060200201602081019061069e9190611329565b8686868181106106b1576106b0611356565b5b905060200201356040518463ffffffff1660e01b81526004016106d6939291906113ad565b600060405180830381600087803b1580156106f057600080fd5b505af1158015610704573d6000803e3d6000fd5b505050508061071290611478565b9050610627565b50505050505050565b838390508888905014610761576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8585905088889050146107a0576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b888890508110156108b0578888828181106107c1576107c0611356565b5b90506020020160208101906107d69190611329565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a3389898581811061080557610804611356565b5b905060200201602081019061081a9190611329565b88888681811061082d5761082c611356565b5b9050602002013587878781811061084757610846611356565b5b905060200201356040518563ffffffff1660e01b815260040161086d94939291906114f7565b600060405180830381600087803b15801561088757600080fd5b505af115801561089b573d6000803e3d6000fd5b50505050806108a990611478565b90506107a3565b505050505050505050565b8383905087879050146108fa576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b878790508110156109e35787878281811061091b5761091a611356565b5b90506020020160208101906109309190611329565b73ffffffffffffffffffffffffffffffffffffffff1663f242432a33888888868181106109605761095f611356565b5b9050602002013587878781811061097a57610979611356565b5b905060200201356040518563ffffffff1660e01b81526004016109a094939291906114f7565b600060405180830381600087803b1580156109ba57600080fd5b505af11580156109ce573d6000803e3d6000fd5b50505050806109dc90611478565b90506108fd565b5050505050505050565b818190508585905014610a2c576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85859050811015610b0c57858582818110610a4d57610a4c611356565b5b9050602002016020810190610a629190611329565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3386868686818110610a9257610a91611356565b5b905060200201356040518463ffffffff1660e01b8152600401610ab7939291906113ad565b6020604051808303816000875af1158015610ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa919061141c565b5080610b0590611478565b9050610a2f565b505050505050565b818190508585905014610b53576040517f22ee6ae700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85859050811015610c2157858582818110610b7457610b73611356565b5b9050602002016020810190610b899190611329565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3386868686818110610bb957610bb8611356565b5b905060200201356040518463ffffffff1660e01b8152600401610bde939291906113ad565b600060405180830381600087803b158015610bf857600080fd5b505af1158015610c0c573d6000803e3d6000fd5b5050505080610c1a90611478565b9050610b56565b505050505050565b600080fd5b600080fd5b600080fd5b600060608284031215610c4e57610c4d610c33565b5b81905092915050565b600060608284031215610c6d57610c6c610c33565b5b81905092915050565b600060808284031215610c8c57610c8b610c33565b5b81905092915050565b600080600060608486031215610cae57610cad610c29565b5b600084013567ffffffffffffffff811115610ccc57610ccb610c2e565b5b610cd886828701610c38565b935050602084013567ffffffffffffffff811115610cf957610cf8610c2e565b5b610d0586828701610c57565b925050604084013567ffffffffffffffff811115610d2657610d25610c2e565b5b610d3286828701610c76565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f840112610d6157610d60610d3c565b5b8235905067ffffffffffffffff811115610d7e57610d7d610d41565b5b602083019150836020820283011115610d9a57610d99610d46565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dcc82610da1565b9050919050565b610ddc81610dc1565b8114610de757600080fd5b50565b600081359050610df981610dd3565b92915050565b60008083601f840112610e1557610e14610d3c565b5b8235905067ffffffffffffffff811115610e3257610e31610d41565b5b602083019150836020820283011115610e4e57610e4d610d46565b5b9250929050565b60008060008060008060006080888a031215610e7457610e73610c29565b5b600088013567ffffffffffffffff811115610e9257610e91610c2e565b5b610e9e8a828b01610d4b565b97509750506020610eb18a828b01610dea565b955050604088013567ffffffffffffffff811115610ed257610ed1610c2e565b5b610ede8a828b01610dff565b9450945050606088013567ffffffffffffffff811115610f0157610f00610c2e565b5b610f0d8a828b01610dff565b925092505092959891949750929550565b600060608284031215610f3457610f33610c33565b5b81905092915050565b600060608284031215610f5357610f52610c33565b5b81905092915050565b600060808284031215610f7257610f71610c33565b5b81905092915050565b600080600060608486031215610f9457610f93610c29565b5b600084013567ffffffffffffffff811115610fb257610fb1610c2e565b5b610fbe86828701610f1e565b935050602084013567ffffffffffffffff811115610fdf57610fde610c2e565b5b610feb86828701610f3d565b925050604084013567ffffffffffffffff81111561100c5761100b610c2e565b5b61101886828701610f5c565b9150509250925092565b6000806000806000806060878903121561103f5761103e610c29565b5b600087013567ffffffffffffffff81111561105d5761105c610c2e565b5b61106989828a01610d4b565b9650965050602087013567ffffffffffffffff81111561108c5761108b610c2e565b5b61109889828a01610d4b565b9450945050604087013567ffffffffffffffff8111156110bb576110ba610c2e565b5b6110c789828a01610dff565b92509250509295509295509295565b6000806000806000606086880312156110f2576110f1610c29565b5b600086013567ffffffffffffffff8111156111105761110f610c2e565b5b61111c88828901610d4b565b9550955050602061112f88828901610dea565b935050604086013567ffffffffffffffff8111156111505761114f610c2e565b5b61115c88828901610dff565b92509250509295509295909350565b6000806000806000806000806080898b03121561118b5761118a610c29565b5b600089013567ffffffffffffffff8111156111a9576111a8610c2e565b5b6111b58b828c01610d4b565b9850985050602089013567ffffffffffffffff8111156111d8576111d7610c2e565b5b6111e48b828c01610d4b565b9650965050604089013567ffffffffffffffff81111561120757611206610c2e565b5b6112138b828c01610dff565b9450945050606089013567ffffffffffffffff81111561123657611235610c2e565b5b6112428b828c01610dff565b92509250509295985092959890939650565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126112805761127f611254565b5b80840192508235915067ffffffffffffffff8211156112a2576112a1611259565b5b6020830192506020820236038313156112be576112bd61125e565b5b509250929050565b600080833560016020038436030381126112e3576112e2611254565b5b80840192508235915067ffffffffffffffff82111561130557611304611259565b5b6020830192506020820236038313156113215761132061125e565b5b509250929050565b60006020828403121561133f5761133e610c29565b5b600061134d84828501610dea565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61138e81610dc1565b82525050565b6000819050919050565b6113a781611394565b82525050565b60006060820190506113c26000830186611385565b6113cf6020830185611385565b6113dc604083018461139e565b949350505050565b60008115159050919050565b6113f9816113e4565b811461140457600080fd5b50565b600081519050611416816113f0565b92915050565b60006020828403121561143257611431610c29565b5b600061144084828501611407565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061148382611394565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114b5576114b4611449565b5b600182019050919050565b600082825260208201905092915050565b50565b60006114e16000836114c0565b91506114ec826114d1565b600082019050919050565b600060a08201905061150c6000830187611385565b6115196020830186611385565b611526604083018561139e565b611533606083018461139e565b8181036080830152611544816114d4565b90509594505050505056fea2646970667358221220b35c17b215c52f254be990522f472af8f4de67553040a3e04701b4aafaecdbb464736f6c63430008120033";

type SwoshConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwoshConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swosh__factory extends ContractFactory {
  constructor(...args: SwoshConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Swosh> {
    return super.deploy(overrides || {}) as Promise<Swosh>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Swosh {
    return super.attach(address) as Swosh;
  }
  override connect(signer: Signer): Swosh__factory {
    return super.connect(signer) as Swosh__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwoshInterface {
    return new utils.Interface(_abi) as SwoshInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Swosh {
    return new Contract(address, _abi, signerOrProvider) as Swosh;
  }
}
