/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TransferCall,
  TransferCallInterface,
} from "../../contracts/TransferCall";

const _abi = [
  {
    inputs: [],
    name: "Failed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "_data",
        type: "bytes[]",
      },
    ],
    name: "multiTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "_data",
        type: "bytes[]",
      },
    ],
    name: "multiTransferSingleAsset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "singleEncodeTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "singleTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a89806100206000396000f3fe60806040526004361061003f5760003560e01c806338a9c993146100445780636052651a14610060578063c2a1defc1461007c578063cd5d808c14610098575b600080fd5b61005e60048036038101906100599190610566565b6100b4565b005b61007a6004803603810190610075919061069b565b6101cb565b005b610096600480360381019061009191906106fb565b610277565b005b6100b260048036038101906100ad9190610791565b610366565b005b60005b848490508110156101c45760008585838181106100d7576100d66107e4565b5b90506020020160208101906100ec9190610813565b73ffffffffffffffffffffffffffffffffffffffff16848484818110610115576101146107e4565b5b9050602002810190610127919061084f565b6040516101359291906108f1565b6000604051808303816000865af19150503d8060008114610172576040519150601f19603f3d011682016040523d82523d6000602084013e610177565b606091505b50509050806101b2576040517f625a40e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50806101bd90610939565b90506100b7565b5050505050565b60008373ffffffffffffffffffffffffffffffffffffffff1683836040516101f49291906108f1565b6000604051808303816000865af19150503d8060008114610231576040519150601f19603f3d011682016040523d82523d6000602084013e610236565b606091505b5050905080610271576040517f625a40e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60005b828290508110156103605760008473ffffffffffffffffffffffffffffffffffffffff168484848181106102b1576102b06107e4565b5b90506020028101906102c3919061084f565b6040516102d19291906108f1565b6000604051808303816000865af19150503d806000811461030e576040519150601f19603f3d011682016040523d82523d6000602084013e610313565b606091505b505090508061034e576040517f625a40e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508061035990610939565b905061027a565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff163384846040516024016103949392919061099f565b6040516020818303038152906040527fa978501e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161041e9190610a3c565b6000604051808303816000865af19150503d806000811461045b576040519150601f19603f3d011682016040523d82523d6000602084013e610460565b606091505b505090508061049b576040517f625a40e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126104d0576104cf6104ab565b5b8235905067ffffffffffffffff8111156104ed576104ec6104b0565b5b602083019150836020820283011115610509576105086104b5565b5b9250929050565b60008083601f840112610526576105256104ab565b5b8235905067ffffffffffffffff811115610543576105426104b0565b5b60208301915083602082028301111561055f5761055e6104b5565b5b9250929050565b600080600080604085870312156105805761057f6104a1565b5b600085013567ffffffffffffffff81111561059e5761059d6104a6565b5b6105aa878288016104ba565b9450945050602085013567ffffffffffffffff8111156105cd576105cc6104a6565b5b6105d987828801610510565b925092505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610612826105e7565b9050919050565b61062281610607565b811461062d57600080fd5b50565b60008135905061063f81610619565b92915050565b60008083601f84011261065b5761065a6104ab565b5b8235905067ffffffffffffffff811115610678576106776104b0565b5b602083019150836001820283011115610694576106936104b5565b5b9250929050565b6000806000604084860312156106b4576106b36104a1565b5b60006106c286828701610630565b935050602084013567ffffffffffffffff8111156106e3576106e26104a6565b5b6106ef86828701610645565b92509250509250925092565b600080600060408486031215610714576107136104a1565b5b600061072286828701610630565b935050602084013567ffffffffffffffff811115610743576107426104a6565b5b61074f86828701610510565b92509250509250925092565b6000819050919050565b61076e8161075b565b811461077957600080fd5b50565b60008135905061078b81610765565b92915050565b6000806000606084860312156107aa576107a96104a1565b5b60006107b886828701610630565b93505060206107c986828701610630565b92505060406107da8682870161077c565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215610829576108286104a1565b5b600061083784828501610630565b91505092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261086c5761086b610840565b5b80840192508235915067ffffffffffffffff82111561088e5761088d610845565b5b6020830192506001820236038313156108aa576108a961084a565b5b509250929050565b600081905092915050565b82818337600083830152505050565b60006108d883856108b2565b93506108e58385846108bd565b82840190509392505050565b60006108fe8284866108cc565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109448261075b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109765761097561090a565b5b600182019050919050565b61098a81610607565b82525050565b6109998161075b565b82525050565b60006060820190506109b46000830186610981565b6109c16020830185610981565b6109ce6040830184610990565b949350505050565b600081519050919050565b60005b838110156109ff5780820151818401526020810190506109e4565b60008484015250505050565b6000610a16826109d6565b610a2081856108b2565b9350610a308185602086016109e1565b80840191505092915050565b6000610a488284610a0b565b91508190509291505056fea26469706673582212205c7c3158c7620ac058e5d5978c4295afce5582222ff36572ce51b331e428800a64736f6c63430008120033";

type TransferCallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferCallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferCall__factory extends ContractFactory {
  constructor(...args: TransferCallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TransferCall> {
    return super.deploy(overrides || {}) as Promise<TransferCall>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TransferCall {
    return super.attach(address) as TransferCall;
  }
  override connect(signer: Signer): TransferCall__factory {
    return super.connect(signer) as TransferCall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferCallInterface {
    return new utils.Interface(_abi) as TransferCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferCall {
    return new Contract(address, _abi, signerOrProvider) as TransferCall;
  }
}
